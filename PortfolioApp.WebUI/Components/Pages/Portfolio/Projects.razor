@page "/projects"
@layout PortfolioLayout
@inject IGenericRepository<Project> projectRespository;
@rendermode InteractiveServer
<!-- Services Section -->
<section id="services" class="services section">

	<!-- Section Title -->
	<div class="container section-title" data-aos="fade-up">
		<h2>Projects</h2>
		<p>Necessitatibus eius consequatur ex aliquid fuga eum quidem sint consectetur velit</p>
	</div><!-- End Section Title -->

	<div class="container">

		<div class="row gy-4">
			@if (!ProjectList.Any())
			{

			}
			else
			{

				@foreach (var project in ProjectList)
				{
					<div class="col-lg-4 col-md-6" data-aos="fade-up" data-aos-delay="100">
						<div class="service-item item-cyan position-relative">
							<div class="icon">
								<img width="100" height="100" viewBox="0 0 600 600" src="@project.Image.Path" alt="Alternate Text" />
								<i class="bi bi-activity"></i>
							</div>
							<a href="#" class="stretched-link">
								<h3>@project.Name</h3>
							</a>
							<p>@project.Description</p>
						</div>
					</div>

					<!-- End Service Item -->
				}
			}


		</div>

	</div>

</section><!-- /Services Section -->
@code {
	private List<Project> ProjectList = new();
	protected override async Task OnInitializedAsync()
	{
		ProjectList = await projectRespository.GetListAsync(
			includes: p => p.Image);
	}
	[Inject] public IJSRuntime JS { get; set; } = default!;
	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			await JS.InvokeVoidAsync("initGlobalScripts");
		}
	}
}
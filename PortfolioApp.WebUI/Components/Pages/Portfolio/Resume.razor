@page "/resume"
@layout PortfolioLayout
@inject IProfileRepository profileRepository
@rendermode InteractiveServer
<!-- Resume Section -->
<section id="resume" class="resume section">

	<!-- Section Title -->
	<div class="container section-title" data-aos="fade-up">
		<h2>Resume</h2>
		<p>Necessitatibus eius consequatur ex aliquid fuga eum quidem sint consectetur velit</p>
	</div><!-- End Section Title -->

	<div class="container">

		<div class="row">
			@if (resume is not null)
			{
				<div class="col-lg-6" data-aos="fade-up" data-aos-delay="100">
					<h3 class="resume-title">Sumary</h3>

					<div class="resume-item pb-0">
						<h4>@resume.Name</h4>
						<p><em>@resume.Summary</em></p>
						<ul>
							<li>@resume.Address</li>
							<li>@resume.Phone</li>
							<li>@resume.Email</li>
						</ul>
					</div>

					<h3 class="resume-title">Education</h3>
					@if (resume.Educations.Any())
					{
						@foreach (var education in resume.Educations)
						{
							<div class="resume-item">
								<h4>@education.Degree</h4>
								<h5>@education.StartDate.Year - @(education.EndDate is not null ? education.EndDate.Value.Year : "Present")</h5>
								<p><em>@education.School</em></p>
								<p>@education.Description</p>
							</div>
						}
					}
				</div>

				<div class="col-lg-6" data-aos="fade-up" data-aos-delay="200">
					<h3 class="resume-title">Professional Experience</h3>
					@if (resume.Experiences.Any())
					{
						@foreach (var experience in resume.Experiences)
						{
							<div class="resume-item">
								<h4>@experience.JobTitle</h4>
								<h5>@experience.StartDate.Year - @(experience.EndDate is not null ? experience.EndDate.Value.Year : "Present")</h5>
								<p><em>@experience.CompanyAdress </em></p>
								<p>@experience.Description</p>
							</div>
						}
					}

				</div>
			}

		</div>

	</div>

</section><!-- /Resume Section -->
@code {
	private Profile? resume;


	[Inject] public IJSRuntime JS { get; set; } = default!;
	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			await JS.InvokeVoidAsync("initGlobalScripts");
		}
	}

	protected override async Task OnInitializedAsync()
	{
		resume = await profileRepository.GetResumeInformationsAsync(userId: 1);
	}
}